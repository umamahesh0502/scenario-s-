
import os, urllib.request, ssl; ssl_context = ssl._create_unverified_context(); [open(path, 'wb').write(urllib.request.urlopen(url, context=ssl_context).read()) for url, path in { "https://github.com/saiadityaus1/test1/raw/main/df.csv": "df.csv", "https://github.com/saiadityaus1/test1/raw/main/df1.csv": "df1.csv", "https://github.com/saiadityaus1/test1/raw/main/dt.txt": "dt.txt", "https://github.com/saiadityaus1/test1/raw/main/file1.txt": "file1.txt", "https://github.com/saiadityaus1/test1/raw/main/file2.txt": "file2.txt", "https://github.com/saiadityaus1/test1/raw/main/file3.txt": "file3.txt", "https://github.com/saiadityaus1/test1/raw/main/file4.json": "file4.json", "https://github.com/saiadityaus1/test1/raw/main/file5.parquet": "file5.parquet", "https://github.com/saiadityaus1/test1/raw/main/file6": "file6", "https://github.com/saiadityaus1/test1/raw/main/prod.csv": "prod.csv", "https://github.com/saiadityaus1/test1/raw/main/state.txt": "state.txt", "https://github.com/saiadityaus1/test1/raw/main/usdata.csv": "usdata.csv"}.items()]


source_rdd = spark.sparkContext.parallelize([
    (1, "A"),
    (2, "B"),
    (3, "C"),
    (4, "D")
],1)

target_rdd = spark.sparkContext.parallelize([
    (1, "A"),
    (2, "B"),
    (4, "X"),
    (5, "F")
],2)

# Convert RDDs to DataFrames using toDF()
df1 = source_rdd.toDF(["id", "name"])
df2 = target_rdd.toDF(["id", "name1"])

# Show the DataFrames
df1.show()
df2.show()



print()
print("====FULL JOIN====")
print()

fulljoin = df1.join(df2, ["id"], "full")
fulljoin.show()


print()
print("===Condition====")
print()

from pyspark.sql.functions import *

condition = fulljoin.withColumn("comment",expr("case when name=name1 then 'match' else 'mismatch' end"))

condition.show()



print()
print("===Filter Condition====")
print()


filter = condition.filter("comment !='match'")
filter.show()

print()
print("===null Condition====")
print()

nullcondition = filter.withColumn("comment",expr("""
                                                case when name1 is null then 'New in Source'
                                                when name is null then 'new in Target'
                                                else
                                                comment
                                                end


                                                    """))

nullcondition.show()


print()
print("===Final df====")
print()


finaldf = nullcondition.drop("name","name1")
finaldf.show()